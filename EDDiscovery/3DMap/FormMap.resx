<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tTPaWo4AAAAASUVORK5CYII=
</value>
  </data>
</root>