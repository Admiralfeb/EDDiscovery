<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk" DefaultTargets="Version;Build;MakeZip">
  <PropertyGroup>
    <ProjectGuid>{6EE10D92-E3E4-44D9-8E6B-851801B0B510}</ProjectGuid>
    <OutputType>WinExe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>EDDiscovery</RootNamespace>
    <AssemblyName>EDDiscovery</AssemblyName>
    <TargetFramework>net461</TargetFramework>
    <Prefer32Bit>false</Prefer32Bit>
    <NoWin32Manifest>true</NoWin32Manifest>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup>
    <ApplicationIcon>Resources\edlogo_3mo_icon.ico</ApplicationIcon>
  </PropertyGroup>
  <PropertyGroup>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="OxyPlot.Core" Version="1.0.0" />
    <PackageReference Include="OxyPlot.WindowsForms" Version="1.0.0" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Management" />
    <Reference Include="System.Speech" />
    <Reference Include="System.Windows.Forms.DataVisualization" />
    <Reference Include="System.Xaml" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="UIAutomationProvider" />
    <Reference Include="WindowsBase" />
    <Reference Include="WindowsFormsIntegration" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\EDDIcons\Controls\Fakes\Controls.Designer.cs">
      <Link>Icons\Controls.Designer.cs</Link>
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Controls.resx</DependentUpon>
    </None>
    <None Include="App.Portable.config" />
    <Content Include="x86\Microsoft.VC100.CRT\msvcp100.dll" />
    <Content Include="x86\Microsoft.VC100.CRT\msvcr100.dll" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\EDDIcons\Controls\Fakes\Controls.resx">
      <Link>Icons\Controls.resx</Link>
      <Generator>PublicResXFileCodeGenerator</Generator>
      <CustomToolNamespace>EDDiscovery.Icons</CustomToolNamespace>
      <LastGenOutput>Controls.Designer.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup Label="3DMap">
    <Compile Update="3DMap\FormMap.cs">
      <SubType>Form</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup Label="Forms">
    <Compile Update="Forms\*.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="Forms\*.Designer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Update="Forms\SurfaceBookmarksUC.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Update="Forms\VersioningManager.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup Label="UserControls">
    <Compile Update="UserControls\*\*.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Update="UserControls\*\*.Designer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Update="UserControls\Helpers\*.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Update="UserControls\Helpers\FindSystemsUserControl.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Update="UserControls\Helpers\StatsTimeUserControl.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Update="UserControls\Helpers\ScanDisplay.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Update="UserControls\Helpers\TagsForm.cs">
      <SubType>Form</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup Label="ScreenShots">
    <Compile Update="ScreenShots\ScreenShotConfigureForm.cs">
      <SubType>Form</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup Label="Main">
    <Compile Update="EDDiscoveryForm.cs">
      <SubType>Form</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ActionLanguage\ActionLanguage.WinForms\ActionLanguage.WinForms.csproj" />
    <ProjectReference Include="..\ActionLanguage\ActionLanguage\ActionLanguage.csproj" />
    <ProjectReference Include="..\BaseUtilities\Audio.CSCore\Audio.CSCore.csproj" />
    <ProjectReference Include="..\BaseUtilities\Audio\Audio.csproj" />
    <ProjectReference Include="..\BaseUtilities\BaseUtilities\BaseUtils.csproj" />
    <ProjectReference Include="..\BaseUtilities\BaseUtils.WinForms\BaseUtils.WinForms.csproj" />
    <ProjectReference Include="..\BaseUtilities\DirectInput\DirectInput.csproj" />
    <ProjectReference Include="..\BaseUtilities\OpenTKUtils\OpenTKUtils.csproj" />
    <ProjectReference Include="..\BaseUtilities\SQLLite\SQLLite.csproj" />
    <ProjectReference Include="..\EDDIcons\EDDIcons.csproj" />
    <ProjectReference Include="..\EliteDangerous\EliteDangerous.csproj" />
    <ProjectReference Include="..\ExtendedControls\ExtendedControls\ExtendedControls.csproj" />
    <ProjectReference Include="..\ExtendedControls\ExtendedForms\ExtendedForms.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Update="Properties\Settings.Designer.cs">
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <None Update="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <UsingTask TaskName="Zip" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <OutputFilename ParameterType="System.String" Required="true" />
      <Files ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.IO.Compression" />
      <Using Namespace="System.IO.Compression" />
      <Code Type="Fragment" Language="cs"><![CDATA[
        try
        {
          using (Stream zipStream = new FileStream(Path.GetFullPath(OutputFilename), FileMode.Create, FileAccess.Write))
          using (ZipArchive archive = new ZipArchive(zipStream, ZipArchiveMode.Create))
          {
              foreach (ITaskItem fileItem in Files)
              {
                  string filename = fileItem.ItemSpec;
                  string name = fileItem.GetMetadata("Name");
                  if (String.IsNullOrEmpty(name)) name = Path.GetFileName(filename);
                  using (Stream fileStream = new FileStream(filename, FileMode.Open, FileAccess.Read))
                      using (Stream fileStreamInZip = archive.CreateEntry(name).Open())
                          fileStream.CopyTo(fileStreamInZip);
              }
          }
          return true;
        }
        catch (Exception ex)
        {
          Log.LogErrorFromException(ex);
          return false;
        }
      ]]></Code>
    </Task>
  </UsingTask>
  <Target Name="MakeZip" Condition=" '$(OS)' != 'Unix' ">
    <ItemGroup>
      <ZipFiles Include="$(TargetPath)" />
      <ZipFiles Include="$(OutDir)*.dll" />
      <ZipFiles Include="$(OutDir)*.pdb" />
      <ZipFiles Include="$(MSBuildProjectDirectory)\Translations\*.tlf" />
      <ZipFiles Include="$(MSBuildProjectDirectory)\UserControls\*.tlp" />
      <ZipFiles Include="$(MSBuildProjectDirectory)\..\EliteDangerous\EliteDangerous\*.tlp" />
      <ZipFiles Include="$(MSBuildProjectDirectory)\..\EliteDangerous\JournalEvents\*.tlp" />
      <ZipFiles Include="$(ProjectDir)App.Portable.config">
        <Name>EDDiscovery.exe.config</Name>
      </ZipFiles>
      <Zipfiles Include="$(OutDir)x64\SQLite.Interop.dll">
        <Name>x64\SQLite.Interop.dll</Name>
      </Zipfiles>
      <Zipfiles Include="$(OutDir)x86\SQLite.Interop.dll">
        <Name>x86\SQLite.Interop.dll</Name>
      </Zipfiles>
    </ItemGroup>
    <Message Text="'@(ZipFiles)' -&gt; '$(OutDir)EDDiscovery.Portable.zip'" />
    <Zip OutputFileName="$(OutDir)EDDiscovery.Portable.zip" Files="@(ZipFiles)" />
    <Error Condition="!Exists('$(OutDir)EDDiscovery.Portable.zip')" Text="Unknown error in BuildPortableZip." />
  </Target>
  <Target Name="CleanZipFile" AfterTargets="Clean">
    <Delete Files="$(OutDir)EDDiscovery.Portable.zip" />
  </Target>
  <Target Name="Version">
    <PropertyGroup Condition=" '$(OS)' != 'Unix' ">
      <GitPath>$(Registry:HKEY_LOCAL_MACHINE\SOFTWARE\GitForWindows@InstallPath)</GitPath>
      <GitPath Condition=" '$(GitPath)' == '' Or !Exists('$(GitPath)\bin\git.exe') ">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\GitForWindows', 'InstallPath', null, RegistryView.Registry64))</GitPath>
      <GitPath Condition=" '$(GitPath)' != '' ">$(GitPath)\bin\git.exe</GitPath>
      <GitPath Condition=" !Exists('$(GitPath)') ">git.exe</GitPath>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(OS)' == 'Unix' ">
      <GitPath Condition=" Exists('/usr/bin/git') ">/usr/bin/git</GitPath>
      <GitPath Condition=" '$(GitPath)' == '' ">git</GitPath>
    </PropertyGroup>
    <PropertyGroup>
      <MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\..\packages\MSBuildTasks.1.5.0.235\tools</MSBuildCommunityTasksPath>
    </PropertyGroup>
    <PropertyGroup>
      <In>$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)/Properties/AssemblyInfo.cs'))</In>
      <Pattern>^\s*\[assembly: AssemblyVersion\(\D*(\d+)\.(\d+(\.\d+)*)</Pattern>
      <AssemblyVersionMajor>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</AssemblyVersionMajor>
      <AssemblyVersionMinor>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[2].Value)</AssemblyVersionMinor>
    </PropertyGroup>
    <Exec Command="&quot;$(GitPath)&quot; describe --always --dirty" ConsoleToMsBuild="true" EchoOff="true" StandardOutputImportance="low" StandardErrorImportance="low" IgnoreExitCode="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitHash" />
      <Output TaskParameter="ExitCode" PropertyName="GitExitCode" />
    </Exec>
    <PropertyGroup Condition="$(GitExitCode) != 0">
      <GitCommitHash>
      </GitCommitHash>
      <GitCommitHash Condition="Exists('$(MSBuildProjectDirectory)/../.git/HEAD')">$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)/../.git/HEAD'))</GitCommitHash>
      <Pattern>^ref: (.*)$</Pattern>
      <GitCommitRef Condition="$([System.Text.RegularExpressions.Regex]::IsMatch($(GitCommitHash), $(Pattern)))">$([System.Text.RegularExpressions.Regex]::Match($(GitCommitHash), $(Pattern)).Groups[1].Value)</GitCommitRef>
      <GitCommitHash Condition="'$(GitCommitRef)' != '' And Exists('$(MSBuildProjectDirectory)/../.git/$(GitCommitRef)')">$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)/../.git/$(GitCommitRef)'))</GitCommitHash>
      <Pattern>^([0-9a-f]{7})[0-9a-f]*$</Pattern>
      <GitCommitHash Condition="$([System.Text.RegularExpressions.Regex]::IsMatch($(GitCommitHash), $(Pattern)))">$(GitCommitHash.SubString(0,7))</GitCommitHash>
    </PropertyGroup>
    <Message Importance="high" Text="Version: $(AssemblyVersionMajor).$(AssemblyVersionMinor), Commit: $(GitCommitHash)" />
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyInformationalVersionAttribute">
        <_Parameter1>$(AssemblyVersionMajor).$(AssemblyVersionMinor)+$(GitCommitHash)</_Parameter1>
      </AssemblyAttribute>
    </ItemGroup>
    <WriteCodeFragment AssemblyAttributes="@(AssemblyAttribute)" Language="C#" OutputFile="Properties\ExtraVersion.cs" />
  </Target>
</Project>
